multiplot(g1,g2, g3, cols = 2)
dev.off()
g2<-ggplot(data.env2, aes(Host, rare))+
geom_boxplot(aes(fill = Host))+
ylab("Rarefied richness")+
scale_y_continuous(labels=c("   1", "   2", "   3", "   4")) +
theme_classic() +
theme(legend.position="none")+
theme(axis.title=element_text(size=18))
g2$layers[[length(g2$layers)+1]] <- geom_text(x = 0.7, y = 4, label = "c", size = 14)
g2
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1$layers[[length(g1$layers)+1]] <- geom_text(x = 2, y = 2.5, label = "a", size = 14)
g3 <- plot_lmfit(var = log10(data.env$density.m3+1), int.term = TRUE,
ylabel = "Associates/m3 (log10-transformed)")
g3$layers[[length(g3$layers)+1]] <- geom_text(x = 6.3, y = 2.25, label = "b", size = 14)
tiff(filename = "C:/Users/User/Dropbox/UBC/AVILES LAB/PROJECT/DATA/Figures 2017/Fig4.tiff", width = 1000, height = 900)
multiplot(g1,g2, g3, cols = 2)
dev.off()
multcompLetters(extract_p(tuke.rare)$Host)$Letters
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
colors()
rainbow()
rainbow(4)
plot(rainbow(4))
pie(rep(1, 12), col = rainbow(12))
pie(col = rainbow(30))
pie(rep(1, 30), col = rainbow(30))
rainbow(30)
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
c("#FF0000FF","#8000FFFF","#80FF00FF","#00FFFFFF")
rainbow("#FF0000FF","#8000FFFF","#80FF00FF","#00FFFFFF")
pie(rep(1, 12), col = c("#FF0000FF","#8000FFFF","#80FF00FF","#00FFFFFF"))
pie(rep(1, 4), col = c("#FF0000FF","#8000FFFF","#80FF00FF","#00FFFFFF"))
pie(rep(1, 30), col = rainbow(30))
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
rainbow(30)
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
terrain.colors()
terrain.colors(12)
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
topo.colors(12)
pie(rep(1, 4), col = rainbow(4))
pie(rep(1, 4), col = c("#FF0000FF","#8000FFFF","#4CBF00FF","#00FFFFFF"))
pie(rep(1, 4), col = c("#FF0000FF","#8000FFFF","#4CBF00FF","#0080FFFF"))
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
pie(rep(1, 24), col = topo.colors(24))
topo.colors(24)
pie(rep(1, 4), col = c("#FF0000FF","#8000FFFF","#4CBF00FF","#0080FFFF"))
pie(rep(1, 4), col = c("#FF0000FF","#8000FFFF","#4CBF00FF","#00BAFFFF"))
g1
source("plot_lmfit2.R")
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1$layers[[length(g1$layers)+1]] <- geom_text(x = 2, y = 2.5, label = "a", size = 14)
g3 <- plot_lmfit(var = log10(data.env$density.m3+1), int.term = TRUE,
ylabel = "Associates/m3 (log10-transformed)")
g3$layers[[length(g3$layers)+1]] <- geom_text(x = 6.3, y = 2.25, label = "b", size = 14)
g2<-ggplot(data.env2, aes(Host, rare))+
geom_boxplot(aes(fill = Host))+
ylab("Rarefied richness")+
scale_y_continuous(labels=c("   1", "   2", "   3", "   4")) +
scale_colour_manual(values=c("#FF0000FF","#8000FFFF","#4CBF00FF","#00BAFFFF")) +
theme_classic() +
theme(legend.position="none")+
theme(axis.title=element_text(size=18))
g2$layers[[length(g2$layers)+1]] <- geom_text(x = 0.7, y = 4, label = "c", size = 14)
g2
g2<-ggplot(data.env2, aes(Host, rare))+
geom_boxplot(aes(fill = Host))+
ylab("Rarefied richness")+
scale_y_continuous(labels=c("   1", "   2", "   3", "   4")) +
scale_fill_manual(values=c("#FF0000FF","#8000FFFF","#4CBF00FF","#00BAFFFF")) +
theme_classic() +
theme(legend.position="none")+
theme(axis.title=element_text(size=18))
g2$layers[[length(g2$layers)+1]] <- geom_text(x = 0.7, y = 4, label = "c", size = 14)
g2
g1 <- plot_lmfit(var = log10(rowSums(data.comm)+1), int.term = TRUE,
ylabel = "Number of associates (log10-transformed)")
g1$layers[[length(g1$layers)+1]] <- geom_text(x = 2, y = 2.5, label = "a", size = 14)
g3 <- plot_lmfit(var = log10(data.env$density.m3+1), int.term = TRUE,
ylabel = "Associates/m3 (log10-transformed)")
g3$layers[[length(g3$layers)+1]] <- geom_text(x = 6.3, y = 2.25, label = "b", size = 14)
tiff(filename = "C:/Users/User/Dropbox/UBC/AVILES LAB/PROJECT/DATA/Figures 2017/Fig4.tiff", width = 1000, height = 900)
multiplot(g1,g2, g3, cols = 2)
dev.off()
source("accum_curve.R") #Home-made function
accum_curve(comm = data.comm, env = data.env, group = data.env$Host)
accum_curve(comm = data.comm, env = data.env, group = data.env$Host)
accum_curve(comm = data.comm, env = data.env, group = data.env$Host)
source("ordination_plot.R")
corr <- rda(comm.hell ~ Host+log10(tangle.vol.cm3)+Condition(Year), data = data.env)
corr
anova(corr)
plot(corr)
plot(corr, type="t", display = c("sp","bp")) #To see the species axes
tiff(filename = "C:/Users/User/Dropbox/UBC/AVILES LAB/PROJECT/DATA/Figures 2017/Fig2_ordination.tiff", width = 800, height = 400)
rda.plot<-ordination_plot(ordi = corr,
group = data.env$Host,
species = data.species,
polygons=FALSE,
plot.species = TRUE,
sp.bold = TRUE)
dev.off()
min(log10(data.env$tangle.vol.cm3))
min(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]))
for(i in 1:4){
min(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]))
}
for(i in 1:4){
print(min(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]])))
}
print(levels(data.env$Host)[i])
for(i in 1:4){
print(levels(data.env$Host)[i])
print(min(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]])))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min: ", min(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]))))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min: ", min(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2))))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min: ", min(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2))),
"max: ", max(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2)))))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min: ", min(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2))),
"max: ", max(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2)))))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min: ", min(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2))),
"max: ", max(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2)))))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min: ",
min(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2)),
"max: ", max(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2))))
}
for(i in 1:4){
print(levels(data.env$Host)[i])
print(paste("min:", min(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2)),
"max:", max(round(log10(data.env$tangle.vol.cm3[data.env$Host==levels(data.env$Host)[i]]),2))))
}
(bdis <- betadisper(vegdist(comm.hell), group = data.env$Host))
plot(bdis)
anova(bdis)
TukeyHSD(bdis)
fit.siz <- aov(log10(tangle.vol.cm3) ~ Host, data = data.env)
fit.siz
summary(fit.siz)
tuke <- TukeyHSD(fit.siz)
letters <- multcompLetters(extract_p(tuke)$Host)$Letters
g<-ggplot(data.env, aes(Host, log10(tangle.vol.cm3)))
g+geom_boxplot(aes(fill = Host))+ #, outlier.shape = NA)+
geom_text(x = 1, y = max(log10(data.env$tangle.vol.cm3))+1, label = "ab", size = 10)+
geom_text(x = 2, y = max(log10(data.env$tangle.vol.cm3))+1, label = "a", size = 10)+
geom_text(x = 3, y = max(log10(data.env$tangle.vol.cm3))+1, label = "b", size = 10)+
geom_text(x = 4, y = max(log10(data.env$tangle.vol.cm3))+1, label = "c", size = 10)+
ylab("Tangle volume (log10-transformed)")+
ylim(c(0,max(log10(data.env$tangle.vol.cm3))+1))+
scale_fill_discrete(guide=FALSE)+
theme_classic()
log10(data.env$tangle.vol.cm3)
# Test for variance in web size
mix.null <- lmer(log10(data.env$tangle.vol.cm3) ~  (1 | Host), data = data.env, REML=FALSE)
summary(mix.null)
mix.lm <- lmer(log10(data.env$tangle.vol.cm3) ~ sociality + (1 | Host), data = data.env, REML=FALSE)
summary(mix.lm)
anova(mix.null, mix.lm)
mix.null <- lmer(tangle.vol.cm3 ~  (1 | Host), data = data.env, REML=FALSE)
summary(mix.null)
mix.lm <- lmer(tangle.vol.cm3 ~ sociality + (1 | Host), data = data.env, REML=FALSE)
summary(mix.lm)
anova(mix.null, mix.lm)
summary(mix.null)
mix.null <- lmer(log10(data.env$tangle.vol.cm3) ~  (1 | Host), data = data.env, REML=FALSE)
summary(mix.null)
mix.lm <- lmer(log10(data.env$tangle.vol.cm3) ~ sociality + (1 | Host), data = data.env, REML=FALSE)
summary(mix.lm)
anova(mix.null, mix.lm)
# Test for variance in web size
var.test(log(data.env$tangle.vol.cm3[data.env$sociality=="social"]),
log(data.env$tangle.vol.cm3[data.env$sociality=="solitary"]))
fit.siz <- aov(log10(tangle.vol.cm3) ~ Host, data = data.env)
fit.siz
summary(fit.siz)
tuke <- TukeyHSD(fit.siz)
multcompLetters(extract_p(tuke)$Host)$Letters
letters <- multcompLetters(extract_p(tuke)$Host)$Letters
# Boxplot
g<-ggplot(data.env, aes(Host, log10(tangle.vol.cm3)))
g+geom_boxplot(aes(fill = Host))+ #, outlier.shape = NA)+
geom_text(x = 1, y = max(log10(data.env$tangle.vol.cm3))+1, label = "ab", size = 10)+
geom_text(x = 2, y = max(log10(data.env$tangle.vol.cm3))+1, label = "a", size = 10)+
geom_text(x = 3, y = max(log10(data.env$tangle.vol.cm3))+1, label = "b", size = 10)+
geom_text(x = 4, y = max(log10(data.env$tangle.vol.cm3))+1, label = "c", size = 10)+
ylab("Tangle volume (log10-transformed)")+
ylim(c(0,max(log10(data.env$tangle.vol.cm3))+1))+
scale_fill_discrete(guide=FALSE)+
theme_classic()
data.env$Host
var(log10(data.env$tangle.vol.cm3[data.env$Host=="Kapogea"]))
var.test(log(data.env$tangle.vol.cm3)~Host, data = data.env)
var.test(log(data.env$tangle.vol.cm3)~sociality, data = data.env)
var(log10(data.env$tangle.vol.cm3[data.env$Host=="Kapogea"]))
var(log10(data.env$tangle.vol.cm3[data.env$Host=="A. eximius"]))
var(log10(data.env$tangle.vol.cm3[data.env$Host=="A.eximius"]))
rare.min <- 5
data.env2 <- data.env[-which(rowSums(data.comm)<=rare.min),]
data.comm2 <- data.comm[-which(rowSums(data.comm)<=rare.min),]
rare <- rarefy(data.comm2, sample = rare.min)       #Rarefied richness of each nest
#Host
rare.lm.host <- lm(rare ~ Host, data = data.env2)
summary(rare.lm.host)
anova(rare.lm.host)
## Abundance
fit.full <- lm(log10(rowSums(data.comm)+1) ~ log10(tangle.vol.cm3)*Host+cld.num, data = data.env)
fit.ab <- lm(log10(rowSums(data.comm)+1) ~ log10(tangle.vol.cm3)+Host, data = data.env)
anova(fit.ab)
#Size
rare.lm.size <- lm(rare ~ log10(tangle.vol.cm3)+Host, data = data.env2)
summary(rare.lm.size)
anova(rare.lm.size)
#Size
fit.full <- lm(rare ~ log10(tangle.vol.cm3)*Host, data = data.env2)
step <- stepAIC(fit.full, direction="both")
step$anova # best model is without interaction term and without cld
fit.add <- lm(rare ~ log10(tangle.vol.cm3)+Host, data = data.env2)
anova(fit.full,fit.add)
AIC(fit.full)
AIC(fit.add)
anova(fit.full,fit.add)
step <- stepAIC(fit.full, direction="forward")
step <- stepAIC(fit.full, direction="backward")
formula(fit.full)
step <- stepAIC(fit.full, scope = formula(fit.full), direction="backward")
step <- stepAIC(fit.add, scope = formula(fit.full), direction="backward")
step <- stepAIC(rare ~ 1, scope = formula(fit.full), direction="forward")
#Size
fit.null <- lm(rare ~ 1, data = data.env2)
step <- stepAIC(fit.null ~ 1, scope = formula(fit.full), direction="forward")
step <- stepAIC(fit.null, scope = formula(fit.full), direction="forward")
step$anova # best model is with interaction term
rare.lm.size <- lm(rare ~ log10(tangle.vol.cm3)*Host, data = data.env2)
summary(rare.lm.size)
anova(rare.lm.size)
summary(rare.lm.size)
anova(rare.lm.size)
rare.lm.size$terms
rare.lm.size$coefficients
coef(rare.lm.size)
rare.lm.size <- lm(rare ~ log10(tangle.vol.cm3), data = data.env2[data.env2$Host=="A.domingo",])
rare.lm.size <- lm(rare ~ log10(tangle.vol.cm3), data = data.env2[,data.env2$Host=="A.domingo"])
rare.lm.size <- lm(rare ~ log10(tangle.vol.cm3), data = data.env2[data.env2$Host=="A.domingo"])
data.env2$Host=="A.domingo"
rare.lm.size <- lm(rare ~ log10(tangle.vol.cm3), data = data.env2[data.env2$Host=="A.domingo",])
rare.lm.size <- lm(rare ~ log10(data.env2$tangle.vol.cm3), data = data.env2[data.env2$Host=="A.domingo",])
summary(rare.lm.size)
anova(rare.lm.size)
rare.lm.size <- lm(rare ~ log10(data.env2$tangle.vol.cm3), data = data.env2[data.env2$Host=="A.eximius",])
summary(rare.lm.size)
rare.lm.size <- lm(rare[data.env2$Host=="A.eximius"] ~ log10(data.env2$tangle.vol.cm3[data.env2$Host=="A.eximius"]), data = data.env2[data.env2$Host=="A.eximius",])
summary(rare.lm.size)
anova(rare.lm.size)
rare[data.env2$Host=="A.eximius"]
log10(data.env2$tangle.vol.cm3[data.env2$Host=="A.eximius"])
data.env2[data.env2$Host=="A.eximius",]
rare.lm.size <- lm(rare[data.env2$Host=="A.eximius"] ~ log10(data.env2$tangle.vol.cm3[data.env2$Host=="A.eximius"]))
summary(rare.lm.size)
anova(rare.lm.size)
for(i in 1:4){
rare.lm.size <- lm(rare[data.env2$Host==levels(data.env2$Host)[i]] ~
log10(data.env2$tangle.vol.cm3[data.env2$Host==levels(data.env2$Host)[i]]))
print(summary(rare.lm.size))
}
for(i in 1:4){
rare.lm.size <- lm(rare[data.env2$Host==levels(data.env2$Host)[i]] ~
log10(data.env2$tangle.vol.cm3[data.env2$Host==levels(data.env2$Host)[i]]))
print(levels(data.env2$Host)[i])
print(summary(rare.lm.size))
}
g<-ggplot(data.env2, aes(log10(tangle.vol.cm3), rare))
g+geom_point(aes(fill = Host))+
geom_smooth(method = "lm")+
ylab("Rarefied richness")+
theme_classic() +
theme(legend.position="none")
# LM line fit for each host
source("plot_lmfit2.R")
anov.fit.rare <- aov(rare.lm.size)
tuke.rare <- TukeyHSD(anov.fit.rare, which = "Host")
tuke.rare$Host
(letters.rare <- multcompLetters(extract_p(tuke.rare)$Host)$Letters)
coef(rare.lm.size)
g1 <- plot_lmfit(var = rare, int.term = TRUE, ylabel = "Rarefied richness", dat = data.env2)
g1
# Summary of ordination
corr <- rda(comm.hell ~ Host+log10(tangle.vol.cm3)+Condition(Year), data = data.env)
corr.sum <- summary(corr)
#Matrix of first axis (solitary-social)
sp.matrix1 <- as.matrix(t(comm.hell[order(corr.sum$sites[,1]),
order(corr.sum$species[,1])]))
#Matrix of second axis (small-large)
sp.matrix2 <- as.matrix(t(comm.hell[order(corr.sum$sites[,2]),
order(corr.sum$species[,2])]))
#First axis (solitary-social) ALL
Coherence(sp.matrix1, sims = 100) #Nope
library(metacom)
#First axis (solitary-social) ALL
Coherence(sp.matrix1, sims = 100) #Nope
#Second axis (small-large) ALL
Coherence(sp.matrix2, sims = 100) #Nope
#First axis (solitary-social) ALL
Coherence(sp.matrix1, sims = 1000) #Nope
#Second axis (small-large) ALL
Coherence(sp.matrix2, sims = 1000) #Nope
for(i in 1:4){
rare.lm.size <- lm(rare[data.env2$Host==levels(data.env2$Host)[i]] ~
log10(data.env2$tangle.vol.cm3[data.env2$Host==levels(data.env2$Host)[i]]))
print(levels(data.env2$Host)[i])
print(summary(rare.lm.size))
}
library(maps)
library(ggplot2)
library(ape)
library(caper)
library(gridExtra)
library(dplyr)
library(vegan)
library(FD)
setwd("C:/Users/User/Dropbox/UBC/AVILES LAB/CommComp Project/Analysis/")
data<-read.csv("data.csv", stringsAsFactors=TRUE) #open communitymatrix.csv in "Community composition" file
species<-read.csv("species.csv", row.names = 1) #open species.csv in "Community composition" file
commcomp<-read.csv("commcompPFF_NEW.csv", stringsAsFactors=TRUE) #open commcompPFF.csv in "Community composition" file
comm<-read.csv("communitydata.csv", row.names = 1)
env<-read.csv("sites2016.csv", row.names = 1)
#species <- species[-c(which(row.names(species)=="vierae"), which(row.names(species)=="analyticus")),]
#Use GPS data set with jittered lat/long
env.j<-read.csv("sites2016_jitter.csv", row.names = 1)
#South America
map(xlim=c(-120,-30), ylim=c(-60,35), fill = TRUE, col = "grey90")
points(x = env.j$Longitude, y = env.j$Latitude,
pch = env.j$Number.of.Species+19, cex = 1.5, bg = "white")
legend("topright", title = "Number of species",
legend=levels(factor(env.j$Number.of.Species)),
pch = unique(env.j$Number.of.Species)+19, pt.cex = 1.5)
#Ecuador
map(regions = "Ecuador", xlim=c(-81,-75.3), ylim=c(-5,2), fill = TRUE, col = "grey90")
points(x = env.j$Longitude[env.j$Country=="Ecuador"], y = env.j$Latitude[env.j$Country=="Ecuador"],
pch = env.j$Number.of.Species[env.j$Country=="Ecuador"]+19, cex = 1.5, bg = "white")
legend("topright", title = "Number of species",
legend=levels(factor(env.j$Number.of.Species[env.j$Country=="Ecuador"])),
pch = unique(env.j$Number.of.Species[env.j$Country=="Ecuador"])+19, cex = 1, pt.cex = 2)
# Phylogenetic datasets
species.phylo<-read.csv("species_phylo2.csv")
phylo <- read.tree("anelosimus_tree.tre")
install.packages(c("ape", "caper"))
# Phylogenetic datasets
species.phylo<-read.csv("species_phylo2.csv")
phylo <- read.tree("anelosimus_tree.tre")
library(maps)
library(ggplot2)
library(ape)
library(caper)
library(gridExtra)
library(dplyr)
library(vegan)
library(FD)
install.packages("FD")
library(FD)
library(vegan)
library(ggplot2)
library(SoDA)
library(mvabund)
library(multcompView)
library(lme4)
library(MASS)
library(ggmap)
library(bipartite)
library(metacom)
setwd("C:/Users/User/Dropbox/UBC/AVILES LAB/PROJECT/DATA/Analysis")
# Community data set
data.comm<-read.csv("data_comm.csv", row.names = 1)
library(vegan)
library(ggplot2)
library(SoDA)
library(mvabund)
library(multcompView)
library(lme4)
library(MASS)
library(ggmap)
library(bipartite)
library(metacom)
setwd("C:/Users/User/Dropbox/UBC/AVILES LAB/PROJECT/DATA/Analysis")
# Community data set
data.comm<-read.csv("data_comm.csv", row.names = 1)
# Environmental data set
data.env<-read.csv("data_env.csv", stringsAsFactor = TRUE, row.names = 1)
data.env$Year <- factor(data.env$Year) #Year as a factor
data.env$Host <- factor(data.env$Host, levels = c("Aglaoctenus", "Kapogea", "A.domingo", "A.eximius")) #Order of hosts
# Species data set
data.species <- read.csv("data_species.csv", stringsAsFactor = TRUE)
if(all(data.species$species==colnames(data.comm))){ #Same order of species
data.comm <- data.comm[-which(data.species$type=="generalist")] #Remove GENERALISTS
}
#Transform community data set
comm.hell<-decostand(data.comm, "hellinger") # Hellinger-transformed community data set
# Transect data sets
census.comm <- read.csv("census_comm.csv", row.names = 1)
census.env  <- read.csv("census_env.csv", row.names = 1)
# Test for variance in web size
library(car)
data.env$log10tangle <- log10(data.env$tangle.vol.cm3)
leveneTest(log10tangle ~ Host*sociality, data=data.env)
leveneTest(log10tangle ~ sociality, data=data.env)
lev.test <- leveneTest(log10tangle ~ Host*sociality, data=data.env)
summary(lev.test)
aov(lev.test)
anova(lev.test)
lev.test$Df
lev.test$`F value`
lev.test$`Pr(>F)`
df <- data.env %>% group_by(Host, sociality) %>%
mutate(dat.med = ifelse(data.env,median(Ctmax, na.rm=TRUE), ifelse(dat==NA, NA)))
df <- data.env %>% group_by(Host, sociality) %>%
mutate(dat.med = ifelse(data.env,median(Ctmax, na.rm=TRUE)))
df <- data.env %>% group_by(Host, sociality) %>%
mutate(dat.med = ifelse(data.env$log10tangle,median(Ctmax, na.rm=TRUE)))
df <- data.env %>% group_by(Host, sociality)
View(df)
View(data.env)
lev.test <- leveneTest(log10tangle ~ Host*sociality, data=data.env)
lev.test
summary(lev.test)
class(lev.test)
lev.test[1]
lev.test[1,]
lev.test[,1]
residuals(lev.test)
residuals(log10tangle ~ Host*sociality, data=data.env)
residuals(data.env$log10tangle)
lm.test <- lm(log10tangle ~ Host*sociality, data=data.env)
residuals(lm.test))
residuals(lm.test)
lm.test
lev.test <- leveneTest(log10tangle ~ Host*sociality, data=data.env)
leveneTest(log10tangle ~ Host*sociality, data=data.env)
tapply(data.env$log10tangle,data.env$Host,FUN = var)
tapply(data.env$log10tangle,data.env$sociality,FUN = var)
apply(data.env$log10tangle,data.env$Host,FUN = median)
apply(data.env$log10tangle,FUN = median)
apply(data.env$log10tangle, MARGIN = 1, FUN = median)
apply(data.env$log10tangle, MARGIN = 2, FUN = median)
apply(data.env$log10tangle, MARGIN = c(1,2), FUN = median)
apply(data.env$log10tangle, MARGIN = data.env$Host, FUN = median)
tapply(data.env$log10tangle,data.env$Host,FUN = var)
leveneTest(log10tangle ~ Host*sociality, data=data.env)
